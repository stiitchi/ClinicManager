@page "/progress-notes/{PatientId:int}"
@using ClinicManager.Shared.DTO_s.Records
@using ClinicManager.Shared.Wrappers
@using ClinicManager.Web.Infrastructure.Services.PatientRecords
@inject IPatientRecordService patientRecordService 

<MudGrid>
    <MudItem xs="12" md="12" sm="12">
        <MudText Align="Align.Center" Typo="Typo.h6">
            Progress Notes Views
        </MudText>
    </MudItem>
    <MudItem xs="12" md="12" sm="12">
      <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/patient-view/{PatientId}"))">Back</MudButton>
    </MudItem>
    @if(_reports.Count() > 0)
    {    
        @foreach (var report in _reports)
        {
                <MudItem md="3" sm="3">
                    <MudCard>
                        <MudCardHeader>
                            <CardHeaderAvatar>
                                <MudAvatar Color="Color.Info" >@report.ProgressReportId</MudAvatar>
                            </CardHeaderAvatar>
                            <CardHeaderActions>
                                 <MudChip Class="mr-2">@report.DateAdded.ToString("MMMM dd")</MudChip> 
                                 <MudChip Class="mr-2">@report.TimeAdded.ToString("HH:mm")</MudChip>
                            </CardHeaderActions>

                        </MudCardHeader>
                        <MudCardContent>
                                <MudGrid>
                                    <MudItem md="6" sm="6">
                                        <MudText Typo="Typo.body2">Allergy</MudText>
                                    </MudItem>
                                    <MudItem md="6" sm="6">
                                        <MudChip Color="Color.Warning">@report.Allergy</MudChip>
                                    </MudItem>
                                     <MudItem md="6" sm="6">
                                        <MudText Typo="Typo.body2">Risk Factor</MudText>
                                    </MudItem>
                                    <MudItem md="6" sm="6">
                                        <MudChip Color="Color.Warning">@report.RiskFactor</MudChip>
                                    </MudItem>
                                     <MudItem md="12" sm="12">
                                         <center><MudText Typo="Typo.body2">Description</MudText></center>                                      
                                    </MudItem>
                                    <MudItem md="12" sm="12">
                                        <MudText Typo="Typo.body2">@report.Desc</MudText>
                                    </MudItem>
                                </MudGrid>
                        </MudCardContent>
                    </MudCard>
                </MudItem>
        }
    }
    else
    {
       <MudItem xs="12" md="12" sm="12">
            <MudText Align="Align.Center" Typo="Typo.body1">No Progress Notes Found</MudText> 
       </MudItem>
    }
    </MudGrid>

  
@code {
    private List<ProgressReportDTO> _reports = new();
    [Parameter] public int PatientId { get; set; } 

    protected async override Task OnInitializedAsync()
    {
        await GetAllReports(PatientId);
    }

    public async Task GetAllReports(int patientId)
    {
        var reports = await patientRecordService.GetAllProgressReportsByPatientId(patientId);
        if (reports.Succeeded)
        {
            _reports = reports.Data;
        }
    }  
}