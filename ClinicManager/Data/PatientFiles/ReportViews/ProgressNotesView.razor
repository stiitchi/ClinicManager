@page "/progress-notes/{PatientId:int}"
@using ClinicManager.Shared.DTO_s.Records
@using ClinicManager.Shared.Wrappers
@using ClinicManager.Web.Infrastructure.Services.PatientRecords
@inject IPatientRecordService patientRecordService 

<MudGrid>
    <MudItem xs="12" md="12" sm="12">
        <MudText Align="Align.Center" Typo="Typo.h6">
            Progress Notes Views
        </MudText>
    </MudItem>
    <MudItem xs="12" md="12" sm="12">
      <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/patient-view/{PatientId}"))">Back</MudButton>
    </MudItem>
     @foreach (var report in _reports)
            {
            <MudItem md="3" sm="3">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudAvatar Color="Color.Info" >@report.ProgressReportId</MudAvatar>
                        </CardHeaderAvatar>
                    </MudCardHeader>
                    <MudCardContent>
                       Allergy:  @report.Allergy <br/>
                       Risk Factor:  @report.RiskFactor <br/>
                       Description : @report.Desc
                    </MudCardContent>
                </MudCard>
            </MudItem>
            }

</MudGrid>

  
@code {
    private List<ProgressReportDTO> _reports = new();
    [Parameter] public int PatientId { get; set; } 

    protected async override Task OnInitializedAsync()
    {
        await GetAllReports(PatientId);
    }

    public async Task GetAllReports(int patientId)
    {
        var reports = await patientRecordService.GetAllProgressReportsByPatientId(patientId);
        if (reports.Succeeded)
        {
            _reports = reports.Data;
        }
    }  
}