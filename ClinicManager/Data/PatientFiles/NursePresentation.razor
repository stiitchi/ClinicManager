@page "/nurse-presentation-add/{PatientId:int}"
@using ClinicManager.Data.Modals.PatientRecords.DailyCare
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.ComfortSleep
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Elimination
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Hygiene
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Intervention
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Mobility
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Nutrition
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Observations
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Oxygenation
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Psychological
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.Safety
@using ClinicManager.Data.Modals.PatientRecords.NursePresentation.SkinReport
@using ClinicManager.Data.Modals.PatientRecords.SkinIntegrity
@using ClinicManager.Data.Modals.PatientRecords.StoolChart
@using ClinicManager.Shared.DTO_s.Records
@using ClinicManager.Shared.DTO_s.Records.Elimination
@using ClinicManager.Shared.DTO_s.Records.Hygiene
@using ClinicManager.Shared.DTO_s.Records.Intervention
@using ClinicManager.Shared.DTO_s.Records.Mobility
@using ClinicManager.Shared.DTO_s.Records.Nutrition
@using ClinicManager.Shared.DTO_s.Records.Observations
@using ClinicManager.Shared.DTO_s.Records.Oxygenation
@using ClinicManager.Shared.DTO_s.Records.Psychological
@using ClinicManager.Shared.DTO_s.Records.Safety
@using ClinicManager.Shared.DTO_s.Records.SkinIntegrity
@inject IDialogService DialogService

<MudGrid>
<MudItem xs="12" md="12" sm="12">
    <MudText Align="Align.Center" Typo="Typo.h6">
        Nurse Presentation
    </MudText>
</MudItem>
 <MudItem xs="12" md="12" sm="12">
      <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/patient-view/{PatientId}"))">Back</MudButton>
    </MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Observations">
            <MudGrid>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Vital Signs</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddVitalSignTest())" 
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Neurological</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddNeuroLogicalTest())" 
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Neurovascular</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddNeuroVascularTest())"  
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Blood Glucose</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddBloodGlucoseTest())" 
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Urine Test</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddUrineTest())" 
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Blood</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddBloodTest())"  
                    Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Oxygenation">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Mask</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddMaskTest())" 
                    Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Polymask</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddPolyMaskTest())" 
                    Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Nasal Cannula</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddNasalCannulaTest())"
                    Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Inhala/Nebs</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddInhalNebsTest())"
                    Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
@*<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Fluids/Electrolyte">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">IV</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    <MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />
                    <MudIconButton Color="Color.Success" Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Oral</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    <MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />
                    <MudIconButton Color="Color.Success" Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Tube</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    <MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />
                    <MudIconButton Color="Color.Success" Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Monitor Fluid</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    <MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />
                    <MudIconButton Color="Color.Success" Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Check IV Suite</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    <MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />
                    <MudIconButton Color="Color.Success" Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>*@
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Nutrition">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Keep N.P.O</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddNPORecord())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Full Ward Diet</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddFullWardDietTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Special</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddSpecialRecord())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Hygiene">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Bedbath</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddBedBathTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Assist: Basin/Bath</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddBathAssistTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Selfcare</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddSelfCareTest())"
                    Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Skin Integrity">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Pressure Part Care</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddPressurePartCareTimeReport())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Report Redness</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddRednessReport())"  
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Psychosocial/Spiritual">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Health Education</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddHealthEducationRecord())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Communication</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddCommunicationRecord())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Support</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddSupportRecord())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Comfort Sleep">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Pain Control</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddComfortSleepTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Mobility">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Mobile/Immobile</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddMobileImmobileTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Walk With Assitance</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddWalkAssistanceTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Assist Into Chair</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddAssistInChairTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Bedrest</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddBedRestTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-3" md="3" sm="6">
                    <MudText Typo="Typo.body2">Exercises</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddExerciseTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Safety">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Check ID Bands</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddCheckIDBandsRecord())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Cotsides</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddCotsideRecord())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Special Intervention">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Medication</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddMedicationTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Wound Care</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddWoundCareTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Post Operative Care</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddPostOperativeCareTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Isolation</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddIsolationTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Traction</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddTractionTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
<MudItem md="6" sm="6">
    <MudExpansionPanels>
        <MudExpansionPanel Text="Elimination">
            <MudGrid>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Continent</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddContinentTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
                <MudItem Class="mt-2" md="3" sm="6">
                    <MudText Typo="Typo.body2">Catheter</MudText>
                </MudItem>
                <MudItem md="3" sm="6">
                    @*<MudIconButton Color="Color.Info" Icon="@Icons.TwoTone.GridView" />*@
                    <MudIconButton Color="Color.Success" OnClick="(() => AddCathetherTest())"
                     Icon="@Icons.TwoTone.Add" />
                </MudItem>
            </MudGrid>
        </MudExpansionPanel>
    </MudExpansionPanels>
</MudItem>
</MudGrid>

@code{
    [Parameter] public int PatientId { get; set; } 

                                                 //Comfort Sleep

    private void AddComfortSleepTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(ComfortSleep.AddEditComfortSleepModel), new ComfortSleepReportDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<ComfortSleep>("Comfort Sleep Test", parameters, options);
    }
                                                //Elimination
    private void AddCathetherTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Cathether.AddEditEliminationModel), new CathetherDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Cathether>("Cathether Test", parameters, options);
    }
    private void AddContinentTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Continent.AddEditEliminationModel), new ContinentDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Continent>("Continent Test", parameters, options);
    }
              

                                                //Hygiene
    private void AddBathAssistTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(BedBathAssist.AddEditEliminationModel), new BedBathAssistDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<BedBathAssist>("Bed Bath Assist Test", parameters, options);
    }
    private void AddBedBathTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(BedBath.AddEditEliminationModel), new BedBathDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<BedBath>("Bed Bath Test", parameters, options);
    }
    private void AddSelfCareTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(SelfCare.AddEditEliminationModel), new SelfCareDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<SelfCare>("Self Care Test", parameters, options);
    }
                                                 //Intervention
    private void AddIsolationTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Isolation.AddEditInterventionModel), new IsolationDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Isolation>("Isolation Test", parameters, options);
    }
    private void AddMedicationTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Medication.AddEditInterventionModel), new MedicationDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Medication>("Medication Test", parameters, options);
    }
    private void AddPostOperativeCareTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(PostOperativeCare.AddEditInterventionModel), new PostOperativeCareDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<PostOperativeCare>("Post Operative Care Test", parameters, options);
    }
    private void AddTractionTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Traction.AddEditInterventionModel), new TractionDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Traction>("Traction Test", parameters, options);
    }
    private void AddWoundCareTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(WoundCare.AddEditInterventionModel), new WoundCareDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<WoundCare>("Wound Care Test", parameters, options);
    }

                                                //Mobility
    private void AddAssistInChairTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(AssistInChair.AddEditMobilityModel), new AssistIntoChairDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<AssistInChair>("Assist In Chair Test", parameters, options);
    }
    private void AddBedRestTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(BedRest.AddEditMobilityModel), new BedRestDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<BedRest>("Bed Rest Test", parameters, options);
    }
    private void AddExerciseTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Exercise.AddEditMobilityModel), new ExerciseDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Exercise>("Exercise Test", parameters, options);
    }
    private void AddMobileImmobileTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(MobileImmobile.AddEditMobilityModel), new MobileImmobileDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<MobileImmobile>("Mobile/Immobile Test", parameters, options);
    }
    private void AddWalkAssistanceTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(WalkAssistance.AddEditMobilityModel), new WalkWithAssistanceDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<WalkAssistance>("Walk Assistance Test", parameters, options);
    }
                                                //Nutrition
    private void AddFullWardDietTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(FullWardDiet.AddEditNutritionModel), new FullWardDietDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<FullWardDiet>("Full Ward Diet Test", parameters, options);
    }
    private void AddNPORecord()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(NPOReport.AddEditNutritionModel), new KeepNPODTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<NPOReport>("NPO Record", parameters, options);
    }
    private void AddSpecialRecord()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Special.AddEditNutritionModel), new SpecialDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Special>("Special Record", parameters, options);
    }

                                               //Observations
    private void AddUrineTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(UrineTest.AddEditObservationModel), new UrineTestDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<UrineTest>("Urine Test", parameters, options);
    }
    private void AddVitalSignTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(VitalSigns.AddEditObservationModel), new VitalSignDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<VitalSigns>("Vital Sign Test", parameters, options);
    }
    private void AddNeuroVascularTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Neurovascular.AddEditObservationModel), new NeuroVascularDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Neurovascular>("Neuro Vascular Test", parameters, options);
    }
    private void AddNeuroLogicalTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Neurological.AddEditObservationModel), new NeuroLogicalDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Neurological>("Neuro Logical Test", parameters, options);
    }
    private void AddBloodGlucoseTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(BloodGlucose.AddEditObservationModel), new BloodGlucoseDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<BloodGlucose>("Blood Glucose Test", parameters, options);
    }
    private void AddBloodTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Blood.AddEditObservationModel), new BloodDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Blood>("Blood Test", parameters, options);
    }
                                                 //Oxygenation

    private void AddMaskTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Mask.AddEditOxygenationModel), new MaskDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Mask>("Mask Test", parameters, options);
    }
    private void AddInhalNebsTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(InhalaNebs.AddEditOxygenationModel), new InhalaNebsDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<InhalaNebs>("Inhala Nebs Test", parameters, options);
    }
    private void AddPolyMaskTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(PolyMask.AddEditOxygenationModel), new PolyMaskDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<PolyMask>("Poly Mask Test", parameters, options);
    }
    private void AddNasalCannulaTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(NasalCannula.AddEditOxygenationModel), new NasalCannulaDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<NasalCannula>("Nasal Cannula Test", parameters, options);
    }
                                                 //Psychological

    private void AddCommunicationRecord()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Communication.AddEditPsychModel), new CommunicationDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Communication>("Communication Test", parameters, options);
    }  
    private void AddHealthEducationRecord()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(HealthEducation.AddEditPsychModel), new HealthEducationDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<HealthEducation>("Health Education Test", parameters, options);
    } 
    private void AddSupportRecord()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Support.AddEditPsychModel), new SupportDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Support>("Support Test", parameters, options);
    } 

                                                 //Safety
    private void AddCheckIDBandsRecord()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(CheckIDBands.AddEditSafetyModel), new CheckIDBandDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<CheckIDBands>("Check ID Bands Test", parameters, options);
    } 
    private void AddCotsideRecord()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Cotside.AddEditSafetyModel), new CotsideDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Cotside>("Cotside Test", parameters, options);
    } 

                                           //Skin Care Plan Report
    private void AddPressurePartCareTimeReport()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(PressurePart.AddEditSkinReportModel), new PressurePartCareDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<PressurePart>("Pressure Part Report", parameters, options);
    } 
    private void AddRednessReport()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(Redness.AddEditSkinReportModel), new RednessDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<Redness>("Redness Report", parameters, options);
    } 
}