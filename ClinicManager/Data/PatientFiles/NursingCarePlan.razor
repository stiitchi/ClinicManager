@page "/patient-view/{PatientId:int}"
@inject IDialogService DialogService
@using ClinicManager.Data.Modals.Patient
@using ClinicManager.Data.Modals.PatientRecords.DailyCare
@using ClinicManager.Data.Modals.PatientRecords.Fluid_Balance
@using ClinicManager.Data.Modals.PatientRecords.ProgressReport
@using ClinicManager.Data.Modals.PatientRecords.SkinIntegrity
@using ClinicManager.Data.Modals.PatientRecords.StoolChart
@using ClinicManager.Data.PatientFiles
@using ClinicManager.Data.PatientFiles.ObservationCharts
@using ClinicManager.Data.PatientFiles.ReportViews
@using ClinicManager.Shared.DTO_s.Records
@using ClinicManager.Shared.DTO_s.Records.SkinReport
@using ClinicManager.Shared.Wrappers
@using ClinicManager.Web.Infrastructure.Services.Patient
@using ClinicManager.Shared.DTO_s
@inject IPatientService patientService 

<MudContainer>
    <MudGrid Class="mt-8">
        <MudItem xs="12" md="12" sm="12">
            <MudText Align="Align.Center" Typo="Typo.h5">
            Patient Records
            </MudText>
        </MudItem>
        <MudItem xs="12" md="12" sm="12">
          <MudButton Variant="Variant.Outlined" Color="Color.Info" Class="mr-2"
                           Style="border-radius:10px 10px 10px 10px"
                           @onclick="@(() => _navigationManager.NavigateTo("/patients"))">Back</MudButton>
          <MudButton Variant="Variant.Outlined" Color="Color.Warning" Class="mr-2"
                           Style="border-radius:10px 10px 10px 10px"
                           @onclick="@(() => _navigationManager.NavigateTo($"/patient-edit/{PatientId}"))">Edit Patient</MudButton>
        </MudItem>
         <MudItem xs="12" md="12" sm="12">
            <MudButton OnClick="AddPatientICDCode" Class="mr-2" Variant="Variant.Outlined" Color="Color.Warning"   Style="border-radius:10px 10px 10px 10px">Assign ICD Code</MudButton> 
            <MudButton OnClick="AddPatientDayFee"  Class="mr-2" Variant="Variant.Outlined" Color="Color.Secondary" Style="border-radius:10px 10px 10px 10px">Assign Day Fee</MudButton> 
            <MudButton OnClick="AddVitalSignChart" Class="mr-2" Variant="Variant.Outlined" Color="Color.Dark"      Style="border-radius:10px 10px 10px 10px">Create Observation Chart</MudButton>
        </MudItem>
        <MudItem xs="12" md="6" sm="6">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudTooltip Text="Patient Age">
                            <MudAvatar Color="Color.Info">@Age</MudAvatar>
                        </MudTooltip>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">@patient.Title @patient.FirstName @patient.LastName</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="6" sm="6">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudAvatar Color="Color.Secondary">Dr</MudAvatar>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">@patient.RefferingDoctor</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudChip Size="Size.Large" Color="Color.Info">@patient.WardNo</MudChip>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">Ward</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudChip Size="Size.Large"Color="Color.Warning">@patient.BedNo</MudChip>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">Bed</MudText>
                    </CardHeaderContent>
                </MudCardHeader>
            </MudCard>
        </MudItem>
            <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <CardHeaderAvatar>
                        <MudChip Size="Size.Large" Color="Color.Secondary">Observation Charts</MudChip>
                    </CardHeaderAvatar>
                    <CardHeaderContent>
                        <MudButton Class="mr-2" Variant="Variant.Outlined" Color="Color.Info" Style="border-radius:10px 10px 10px 10px" @onclick="@(() => _navigationManager.NavigateTo($"/patient-charts/{PatientId}"))">View</MudButton>
                    </CardHeaderContent>
                </MudCardHeader>
            </MudCard>
        </MudItem>
     @*   <MudItem md="6" sm="6">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">Diagnosis</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudAvatar Color="Color.Success" Class="mr-2">
                            <MudIcon Icon="@Icons.TwoTone.Check" />
                        </MudAvatar>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.body2">Blah blah</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem md="6" sm="6">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <CardHeaderContent>
                        <MudText Typo="Typo.body1">Allergies</MudText>
                    </CardHeaderContent>
                    <CardHeaderActions>
                        <MudAvatar Color="Color.Error" Class="mr-2">
                            <MudIcon Icon="@Icons.TwoTone.Close" />
                        </MudAvatar>
                    </CardHeaderActions>
                </MudCardHeader>
                <MudCardContent>
                    <MudText Typo="Typo.body2">Vrouens</MudText>
                </MudCardContent>
            </MudCard>
        </MudItem>*@
        <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <center>
                        <MudText Typo="Typo.inherit">Progress Notes</MudText>
                    </center>
                </MudCardHeader>
                <MudCardContent>
                    <MudButton Variant="Variant.Outlined" Color="Color.Success"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(e => AddProgressNotes())">Add</MudButton>
                    <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/progress-notes/{PatientId}"))">View</MudButton>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <center>
                        <MudText Typo="Typo.inherit">Nurse Presentation</MudText>
                    </center>
                </MudCardHeader>
                <MudCardContent>
                    <MudButton Variant="Variant.Outlined" Color="Color.Success"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/nurse-presentation-add/{PatientId}"))">Add</MudButton>
                    <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/nurse-presentation/{PatientId}"))">View</MudButton>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <center>
                        <MudText Typo="Typo.inherit">Daily Care</MudText>
                    </center>
                </MudCardHeader>
                <MudCardContent>
                    <MudButton Variant="Variant.Outlined" Color="Color.Success"
                               Style="border-radius:10px 10px 10px 10px"
                               OnClick="(() => AddDailyCareTest())">Add</MudButton>
                    <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/daily-care/{PatientId}"))">View</MudButton>
                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <center>
                        <MudText Typo="Typo.inherit">Fluid Balance</MudText>
                    </center>
                </MudCardHeader>
                <MudCardContent>
                    <MudButton Variant="Variant.Outlined" Color="Color.Success"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/fluid-balance-add/{PatientId}"))">Add</MudButton>

                    <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/fluid-balance-view/{PatientId}"))">View</MudButton>

                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="4" sm="4">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <center>
                        <MudText Typo="Typo.inherit">Skin Integrity</MudText>
                    </center>
                </MudCardHeader>
                <MudCardContent>
                    <MudButton Variant="Variant.Outlined" Color="Color.Success"
                               Style="border-radius:10px 10px 10px 10px"
                               OnClick="(() => AddSkinIntegrityReport())">Add</MudButton>
                    <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/skin-integrity/{PatientId}"))">View</MudButton>

                </MudCardContent>
            </MudCard>
        </MudItem>
        <MudItem xs="12" md="4" sm="4" Style="border-radius:10px 10px 10px 10px">
            <MudCard Elevation="4" Style="border-radius:10px 10px 10px 10px">
                <MudCardHeader>
                    <center>
                        <MudText Typo="Typo.inherit">Stool Charts</MudText>
                   </center>
                </MudCardHeader>
                <MudCardContent>
                    <MudButton Variant="Variant.Outlined" Color="Color.Success"
                               Style="border-radius:10px 10px 10px 10px"
                               OnClick="(() => AddStoolChartReport())">Add</MudButton>
                    <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/stool-chart/{PatientId}"))">View</MudButton>

                </MudCardContent>
            </MudCard>
        </MudItem>
    </MudGrid>
</MudContainer>

@code {
    public string currentView;
    [Parameter] public int PatientId { get; set; } 
    private PatientDTO patient = new();
    private int Age;

    protected async override Task OnInitializedAsync()
    {
        await GetPatientById(PatientId);
        await CalculateAge();
    }

    public async Task CalculateAge()
    {
        var date = DateTime.Now;
        var age = date.Year - patient.DateOfBirth.Value.Year;
        Age = age;
    }
    public async Task GetPatientById(int patientId)
    {
        IResult<PatientDTO> response;
        response = await patientService.GetById(patientId);
        if (response.Succeeded)
        {
            patient = response.Data;
        }
    }

    private void AddVitalSignChart()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(ChartSelectorModal.ChartSelectorModel), new ChartSelectorDTO
        {
            PatientId  = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<ChartSelectorModal>("Chart", parameters, options);
    }

    private void AddProgressNotes()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(ProgressNotesModal.AddEditObservationModel), new ProgressReportDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<ProgressNotesModal>("Progress Notes", parameters, options);
    }

    private void AddDailyCareTest()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(DailyCareModal.AddEditDailyCareModel), new DailyCareRecordDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<DailyCareModal>("Daily Care Test", parameters, options);
    }
    private void AddSkinIntegrityReport()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(SkinIntegrityModal.AddEditSafetyModel), new SkinReportDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<SkinIntegrityModal>("Skin Integrity Report", parameters, options);
    }
    private void AddStoolChartReport()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(StoolChartModal.AddEditStoolChartModel), new StoolChartDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge, };
        DialogService.Show<StoolChartModal>("Stool Chart Report", parameters, options);
    } 

    private void AddPatientICDCode()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(AssignICDCodePatient.AssignICDCode), new PatientICDCodeDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.ExtraExtraLarge, };
        _dialogService.Show<AssignICDCodePatient>("Patient ICD Code", parameters, options);
    }

    private void AddPatientDayFee()
    {
        var parameters = new DialogParameters();
        parameters.Add(nameof(AssignDayFeesPatient.AssignDayFee), new PatientDayFeeDTO
        {
            PatientId = PatientId
        });
        var options = new DialogOptions() { CloseButton = false, MaxWidth = MaxWidth.ExtraExtraLarge, };
        _dialogService.Show<AssignDayFeesPatient>("Patient Day Fee", parameters, options);
    }
}
