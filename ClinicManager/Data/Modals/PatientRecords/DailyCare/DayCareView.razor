@page "/daily-care/{PatientId:int}"
@using ClinicManager.Shared.DTO_s.Records
@using ClinicManager.Shared.Wrappers
@using ClinicManager.Web.Infrastructure.Services.PatientRecords
@inject IPatientRecordService patientRecordService 

<MudGrid>
    <MudItem xs="12" md="12" sm="12">
        <MudText Align="Align.Center" Typo="Typo.h6">
            Daily Care Views
        </MudText>
    </MudItem>
    <MudItem xs="12" md="12" sm="12">
      <MudButton Variant="Variant.Outlined" Color="Color.Info"
                               Style="border-radius:10px 10px 10px 10px"
                               @onclick="@(() => _navigationManager.NavigateTo($"/patient-view/{PatientId}"))">Back</MudButton>
    </MudItem>
    @if (_reports.Count() > 0)
    {
        @foreach (var report in _reports)
        {
            <MudItem md="3" sm="3">
                <MudCard>
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudChip Color="Color.Info">@report.CareRecord</MudChip>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                        </CardHeaderContent>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudChip Class="mr-2">@report.DateAdded.ToString("MMMM dd")</MudChip>
                        <MudChip>@report.TimeAdded.ToString("HH:mm")</MudChip>
                    </MudCardContent>
                </MudCard>
            </MudItem>
        }
    }
    else
    {

       <MudItem xs="12" md="12" sm="12">
            <MudText Align="Align.Center" Typo="Typo.body1">No Daily Care Records Found</MudText> 
       </MudItem>
    }

</MudGrid>

@code {
    private List<DailyCareRecordDTO> _reports = new();
    [Parameter] public int PatientId { get; set; } 

    protected async override Task OnInitializedAsync()
    {
        await GetAllReports(PatientId);
    }

    public async Task GetAllReports(int patientId)
    {
        var reports = await patientRecordService.GetAllDailyCareRecordsByPatientId(patientId);
        if (reports.Succeeded)
        {
            _reports = reports.Data;
        }
    }  
}