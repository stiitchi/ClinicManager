@using ClinicManager.Shared.DTO_s.Records.SkinIntegrity
@using ClinicManager.Shared.Wrappers
@using ClinicManager.Web.Infrastructure.Services.PatientRecords
@using ClinicManager.Shared.DTO_s.Records.Mobility
@inject IPatientRecordService patientRecordService 


<MudDialog Style="width:400px;">
    <DialogContent>
        <EditForm Model="AddEditSkinReportModel" OnValidSubmit="SaveAsync">
        <MudItem xs="8" md="12" sm="12">
            <MudTimePicker Variant="Variant.Outlined" Time="time" AmPm="true" />
        </MudItem>
        <MudItem xs="8" md="12" sm="12">
            <MudTextField @bind-Value="AddEditSkinReportModel.ReportRednessFrequency"  Label="Frequency" Variant="Variant.Outlined" />
        </MudItem>
        <MudItem xs="8" md="12" sm="12">
            <MudButton Variant="Variant.Outlined"
                       Color="Color.Info" Class="mt-2"
                       Style="border-radius:10px 10px 10px 10px"
                       >Sign Report</MudButton>
            <MudCard Outlined="true" Class="mt-2"
                     Style="width:350px; height:100px;
                     border-radius:10px 10px 10px 10px" />
        </MudItem>
        </EditForm>
    </DialogContent>
    <DialogActions>
        <MudButton Variant="Variant.Outlined"
                   Style="border-radius:10px 10px 10px 10px"
                   Color="Color.Error" OnClick="Cancel">Cancel</MudButton>
        <MudButton Variant="Variant.Outlined" Color="Color.Success"
                   Style="border-radius:10px 10px 10px 10px"
                    OnClick="(() => SaveAsync())">Add Redness Record</MudButton>
    </DialogActions>
</MudDialog>


@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public RednessDTO AddEditSkinReportModel { get; set; } = new();
    void Cancel() => MudDialog.Cancel();
    private bool _processing = false;
    public DateTime today = DateTime.Today;
    public TimeSpan time = DateTime.Now.TimeOfDay;

    private async Task SaveAsync()
    {
        _processing = true;
        IResult<int> response;
        AddEditSkinReportModel.PatientId = 1;
        AddEditSkinReportModel.ReportRednessSignature = "Signature";
        
        time = AddEditSkinReportModel.ReportRednessTime.TimeOfDay;
        response = await patientRecordService.AddRednessReportRecord(AddEditSkinReportModel);
        if (response.Succeeded)
        {
            _snackBar.Add("Redness Record Saved", Severity.Success);
            _processing = false;
            MudDialog.Close();
        }
        else
        {
            foreach (var message in response.Messages)
            {
                _snackBar.Add(message, Severity.Error);
                MudDialog.Close();
            }
        }
    }     
}